version: '3.8'

x-common-variables: &common-variables
  PORT: 4000
  NODE_ENV: production
  FRONT_URL: http://127.0.0.1:80
  SQL_HOST: magellanic-metadata
  SQL_PORT: 5432
  SQL_USERNAME: magellanic
  SQL_PASSWORD: ChangeMe
  SQL_DBNAME: magellanic
  SQL_USE_SSL: 0
  AES_KEY: ChangeMe
  GUACD_PORT: 4822
  GUACD_HOST: magellanic-remote
  ACCESS_TOKEN_EXPIRES_IN: 3600
  REFRESH_TOKEN_EXPIRES_IN: 3600
  TOKENS_ROTATION_INTERVAL_MINUTES: 1
  NEO4J_URL: bolt://magellanic-graph:7687
  NEO4J_USERNAME: neo4j
  NEO4J_PASSWORD: password
  REDIS_HOST: magellanic-queue
  REDIS_PORT: 6379
  MFA_RELYING_PARTY: Magellanic
  MAILER_AUTH: 0
  MAILER_HOST: smtp.magellanic.one
  MAILER_PORT: 25
  MAILER_USER: admin@mail.com
  MAILER_PASS: ChangeMe
  MAILER_FROM: ChangeMe <admin@mail.com>

services:

  magellanic-core-initdb:
    image: ${MAGELLANIC_IMAGE_REGISTRY}/magellanic-backend:1.2.0
    container_name: magellanic-init
    restart: on-failure
    depends_on:
      - magellanic-metadata
      - queue
    entrypoint: /bin/sh
    command:
      - -c
      - ./init.sh
    environment:
      <<: *common-variables
    networks:
      - magellanic

  magellanic-core:
    image: ${MAGELLANIC_IMAGE_REGISTRY}/magellanic-backend:1.2.0
    container_name: magellanic-core
    restart: always
    depends_on:
      - magellanic-core-initdb
      - magellanic-remote
      - queue
    ports:
      - 4000:4000
    environment:
      <<: *common-variables
    networks:
      - magellanic

  frontend:
    image: ${MAGELLANIC_IMAGE_REGISTRY}/magellanic-frontend:1.2.0
    container_name: nginx
    restart: always
    environment:
      REACT_APP_API: http://127.0.0.1:4000
      REACT_APP_SOCKET_SERVER_URL: ws://127.0.0.1:4000
    volumes:
      - ./magellanic.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - magellanic-core
    ports:
      - 80:80
      - 443:443
    networks:
      - magellanic

  magellanic-metadata:
    image: ${MAGELLANIC_IMAGE_REGISTRY}/magellanic-services:postgres-16.0
    container_name: magellanic-metadata
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: magellanic
    volumes:
      - metadata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "vault" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - magellanic

  magellanic-remote:
    container_name: magellanic-remote
    image: ${MAGELLANIC_IMAGE_REGISTRY}/magellanic-services:mgld-1.2.0
    restart: always
    ports:
      - 4822:4822
    volumes:
      - ./drive:/drive:rw
      - ./record:/record:rw
    networks:
      - magellanic

  queue:
    image: ${MAGELLANIC_IMAGE_REGISTRY}/magellanic-services:redis-7.0.3
    container_name: magellanic-queue
    restart: always
    volumes:
      - redis:/data
    networks:
      - magellanic

  graphdb:
    image: ${MAGELLANIC_IMAGE_REGISTRY}/magellanic-services:neo4j-4.4
    container_name: magellanic-graph
    restart: always
    environment:
      NEO4J_AUTH: neo4j/password
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - graphdb:/data
    networks:
      - magellanic

networks:
  magellanic:
    name: magellanic

volumes:
  graphdb:
  metadata:
  redis:
